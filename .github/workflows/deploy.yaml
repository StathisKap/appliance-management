name: Build, Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker image
        id: docker_build
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t stathiskap/appliance-management:1.0 .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
          docker push stathiskap/appliance-management:1.0


  deploy:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml

      - name: Conditional Rollout Restart
        run: |
          #!/bin/bash

          export KUBECONFIG=kubeconfig.yaml
          NAMESPACE="django-app"
          DEPLOYMENT_NAME="django-app"

          DEPLOYMENT_EXISTS=$(kubectl get deployment $DEPLOYMENT_NAME -n $NAMESPACE --ignore-not-found -o jsonpath='{.metadata.name}')

          if [ -n "$DEPLOYMENT_EXISTS" ]; then
            kubectl rollout restart deployment/$DEPLOYMENT_NAME -n $NAMESPACE
            echo "Deployment $DEPLOYMENT_NAME restarted."
          else
            kubectl apply -f k3s/www/$DEPLOYMENT_NAME/$DEPLOYMENT_NAME-deployment.yaml -n $NAMESPACE
            echo "Deployment $DEPLOYMENT_NAME not found, applying it now."
          fi